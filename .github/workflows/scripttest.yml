name: test sCript

on:
  workflow_dispatch:

jobs:
  job1:
   runs-on: windows-latest
   
   steps: 
     - name: Write content to applicationoutput.txt
       shell: pwsh
       run: |
        $content = "123,drf,3434"
        Set-Content -Path applicationoutput.txt -Value $content
     - name: Trigger the Workflow in auto gatling execution Repository2       
       run: |
        $STATUS = 'pass'     
        echo "The status of application is: $STATUS" 
        if ($STATUS -match "pass") 
        {
          echo "pass"
          
        } 
        else 
        {
          echo "fail"
        }    
        $name = Get-Content -Path applicationoutput.txt
        $splitStepName = $name -split ','                
        echo "Gatling Run ID: ${splitStepName[0]}"
        echo "Start Time: ${splitStepName[1]}"
        echo "End Time: ${splitStepName[2]}"             
        echo "response-output1=${splitStepName[0]}" >> $GITHUB_OUTPUT
        echo "response-output2=${splitStepName[1]}" >> $GITHUB_OUTPUT
        echo "response-output3=${splitStepName[2]}" >> $GITHUB_OUTPUT
     - name: Read and process content from applicationoutput.txt
       shell: pwsh
       run: |
        $name = Get-Content -Path applicationoutput.txt
        $splitStepName = $name -split ','
        echo "Gatling Run ID: $($splitStepName[0])"
        echo "Start Time: $($splitStepName[1])"
        echo "End Time: $($splitStepName[2])"
     - name: Check for dotnet installation
       run: |
        dotnet --version
        if ($LASTEXITCODE -eq 0) {
          echo "dotnet is installed."
        } else {
            uses: actions/setup-dotnet@v3
            with:
            dotnet-version: 6.0.x
            echo "dotnet is installing now."
        }
     - name: Run application with secrets
       run: |
       env:
        ACTIONS_KEY: ${{ secrets.ACTIONS_KEY }}
        echo "Service User Name: $ACTIONS_KEY"
       
  job2:
   runs-on: windows-latest
   needs: job1
   steps: 
     - name: Trigger the Workflow in auto gatling execution Repository2       
       run: |
        $STATUS = 'pass'     
        echo "The status of application is: $STATUS" 
        if ($STATUS -match "pass") 
        {
          echo "pass"
        } 
        else 
        {
          echo "fail"
        }    
        
         
     
              

